services:
  app:
    container_name: app-dev
    image: app-dev
    build:
      context: dashboard
      target: development
    volumes:
      - ./src:/app/src
    ports:
      - 4000:3000
  #  rabbitmq:
  #    image: rabbitmq:3-management-alpine
  #    container_name: 'rabbitmq'
  #    ports:
  #      - 5672:5672
  #      - 15672:15672
  #    volumes:
  #      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  postgres:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: conversation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
  backend:
    depends_on:
      - postgres
    volumes:
      - /tmp:/tmp
    #    command:
    #      - /bin/sh
    #      - -c
    #      - sleep 1; npm run migration:run; node main.js
    environment:
      DB_NAME: conversation
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RECOGNITION_HOST: ml
      RECOGNITION_PORT: 3333
      FILE_STORAGE_LOCAL: true
      FILE_STORAGE_DIR: /tmp
      HELPER_HOST: ml-chat
      HELPER_POST: 4444
    image: banzai/audio-service:v0.0.1
    build:
      context: backend/audio-service
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
      - '3002:3001'
  ml:
    restart: always
    volumes:
      - app:/root/.cache
      - /tmp:/tmp
    image: banzai/predictor-ml:v0.0.1
    build:
      context: ml
      dockerfile: Dockerfile
    ports:
      - '3001:3333'
  ml-chat:
    volumes:
      - /tmp:/tmp
      - app:/root/.cache
      - ./data:/data
    image: banzai/predictor-ml-chat:v0.0.1
    build:
      context: ml-chat
      dockerfile: Dockerfile
    ports:
      - '5001:4444'
volumes:
  app: